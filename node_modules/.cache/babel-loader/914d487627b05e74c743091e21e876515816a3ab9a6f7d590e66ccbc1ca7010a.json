{"ast":null,"code":"import api from './api';\nexport const userService = {\n  getUsers: async (page = 0, filters = {}) => {\n    try {\n      const response = await api.get('/usuarios', {\n        params: {\n          page,\n          ...filters\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Buscar um usuário específico\n  getUserById: async id => {\n    const response = await api.get(`/${id}`);\n    return response.data;\n  },\n  getUserByEmail: async email => {\n    const response = await api.get(`/usuarios/${email}`);\n    return response.data;\n  },\n  // Criar um novo usuário\n  createUser: async userData => {\n    const response = await api.post('/usuarios', userData);\n    return response.data;\n  },\n  // Atualizar um usuário\n  updateUser: async (id, userData) => {\n    const response = await api.put(`/usuarios/atualizar-usuario/${id}`, userData);\n    return response.data;\n  },\n  updateUserStatus: async email => {\n    const response = await api.post(`/usuarios/alterar-status`, {\n      email: email\n    });\n    return response.data;\n  },\n  verifyEmail: async email => {\n    return await api.get(`/usuarios/verificar-email/${email}`);\n  }\n};","map":{"version":3,"names":["api","userService","getUsers","page","filters","response","get","params","data","error","getUserById","id","getUserByEmail","email","createUser","userData","post","updateUser","put","updateUserStatus","verifyEmail"],"sources":["/home/arthur/pointer-ft/pointer-front/src/services/userService.js"],"sourcesContent":["import api from './api';\n\nexport const userService = {\n  \n  getUsers: async (page = 0, filters = {}) => {\n    try {\n      const response = await api.get('/usuarios', {\n        params: {\n          page,\n          ...filters\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n\n  // Buscar um usuário específico\n  getUserById: async (id) => {\n    const response = await api.get(`/${id}`);\n    return response.data;\n  },\n  getUserByEmail: async (email) => {\n    const response = await api.get(`/usuarios/${email}`);\n    return response.data;\n  },\n\n  // Criar um novo usuário\n  createUser: async (userData) => {\n    const response = await api.post('/usuarios', userData);\n    return response.data;\n  },\n\n  // Atualizar um usuário\n  updateUser: async (id, userData) => {\n    const response = await api.put(`/usuarios/atualizar-usuario/${id}`, userData);\n    return response.data;\n  },\n\n\n  updateUserStatus: async (email) => {\n    const response = await api.post(`/usuarios/alterar-status`,  {email: email});\n    return response.data;\n  },\n\n  verifyEmail: async (email) => {\n    return await api.get(`/usuarios/verificar-email/${email}`);  \n  },\n\n};  "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,WAAW,GAAG;EAEzBC,QAAQ,EAAE,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,WAAW,EAAE;QAC1CC,MAAM,EAAE;UACNJ,IAAI;UACJ,GAAGC;QACL;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAGD;EACAC,WAAW,EAAE,MAAOC,EAAE,IAAK;IACzB,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,IAAIK,EAAE,EAAE,CAAC;IACxC,OAAON,QAAQ,CAACG,IAAI;EACtB,CAAC;EACDI,cAAc,EAAE,MAAOC,KAAK,IAAK;IAC/B,MAAMR,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAaO,KAAK,EAAE,CAAC;IACpD,OAAOR,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAM,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,MAAMV,QAAQ,GAAG,MAAML,GAAG,CAACgB,IAAI,CAAC,WAAW,EAAED,QAAQ,CAAC;IACtD,OAAOV,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAS,UAAU,EAAE,MAAAA,CAAON,EAAE,EAAEI,QAAQ,KAAK;IAClC,MAAMV,QAAQ,GAAG,MAAML,GAAG,CAACkB,GAAG,CAAC,+BAA+BP,EAAE,EAAE,EAAEI,QAAQ,CAAC;IAC7E,OAAOV,QAAQ,CAACG,IAAI;EACtB,CAAC;EAGDW,gBAAgB,EAAE,MAAON,KAAK,IAAK;IACjC,MAAMR,QAAQ,GAAG,MAAML,GAAG,CAACgB,IAAI,CAAC,0BAA0B,EAAG;MAACH,KAAK,EAAEA;IAAK,CAAC,CAAC;IAC5E,OAAOR,QAAQ,CAACG,IAAI;EACtB,CAAC;EAEDY,WAAW,EAAE,MAAOP,KAAK,IAAK;IAC5B,OAAO,MAAMb,GAAG,CAACM,GAAG,CAAC,6BAA6BO,KAAK,EAAE,CAAC;EAC5D;AAEF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}